// This file was generated by Cloud Code Bindings Generator. Modifications will be lost upon regeneration.
using System.Collections.Generic;
using System.Threading.Tasks;
using System;

namespace Unity.Services.CloudCode.GeneratedBindings
{
    public class GemHunterUGSCloudBindings
    {
        readonly ICloudCodeService k_Service;
        public GemHunterUGSCloudBindings(ICloudCodeService service)
        {
            k_Service = service;
        }

        public async Task<string> SayHello(string name)
        {
            return await k_Service.CallModuleEndpointAsync<string>(
                "GemHunterUGSCloud",
                "SayHello",
                new Dictionary<string, object>()
                {
                    {"name", name},
                });
        }

        public async Task<string> TestFunction()
        {
            return await k_Service.CallModuleEndpointAsync<string>(
                "GemHunterUGSCloud",
                "TestFunction",
                new Dictionary<string, object>()
                {
                });
        }

        public async Task<GemHunterUGSCloud.Models.PlayerEconomyData> HandleGrantVideoAdReward(string adToken)
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.PlayerEconomyData>(
                "GemHunterUGSCloud",
                "HandleGrantVideoAdReward",
                new Dictionary<string, object>()
                {
                    {"adToken", adToken},
                });
        }

        public async Task<List<GemHunterUGSCloud.Models.Player>> GetPlayerList()
        {
            return await k_Service.CallModuleEndpointAsync<List<GemHunterUGSCloud.Models.Player>>(
                "GemHunterUGSCloud",
                "GetPlayerList",
                new Dictionary<string, object>()
                {
                });
        }

        public async Task<GemHunterUGSCloud.Models.CommandReward> ProcessAreaCompleteCommandBatch(List<string> timeSignedCommandKeys)
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.CommandReward>(
                "GemHunterUGSCloud",
                "ProcessAreaCompleteCommandBatch",
                new Dictionary<string, object>()
                {
                    {"timeSignedCommandKeys", timeSignedCommandKeys},
                });
        }

        public async Task<GemHunterUGSCloud.Models.DailyRewardsResult> ClaimDailyReward()
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.DailyRewardsResult>(
                "GemHunterUGSCloud",
                "ClaimDailyReward",
                new Dictionary<string, object>()
                {
                });
        }

        public async Task<GemHunterUGSCloud.Models.DailyRewardsResult> GetDailyRewardsStatus()
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.DailyRewardsResult>(
                "GemHunterUGSCloud",
                "GetDailyRewardsStatus",
                new Dictionary<string, object>()
                {
                });
        }

        public async Task<List<GemHunterUGSCloud.Models.Player>> GetFriends()
        {
            return await k_Service.CallModuleEndpointAsync<List<GemHunterUGSCloud.Models.Player>>(
                "GemHunterUGSCloud",
                "GetFriends",
                new Dictionary<string, object>()
                {
                });
        }

        public async Task<List<GemHunterUGSCloud.Models.Player>> AddFriend(string friendPlayerId)
        {
            return await k_Service.CallModuleEndpointAsync<List<GemHunterUGSCloud.Models.Player>>(
                "GemHunterUGSCloud",
                "AddFriend",
                new Dictionary<string, object>()
                {
                    {"friendPlayerId", friendPlayerId},
                });
        }

        public async Task<List<GemHunterUGSCloud.Models.Player>> RemoveFriend(string friendPlayerId)
        {
            return await k_Service.CallModuleEndpointAsync<List<GemHunterUGSCloud.Models.Player>>(
                "GemHunterUGSCloud",
                "RemoveFriend",
                new Dictionary<string, object>()
                {
                    {"friendPlayerId", friendPlayerId},
                });
        }

        public async Task<bool> CheckGiftHeartReplenish()
        {
            return await k_Service.CallModuleEndpointAsync<bool>(
                "GemHunterUGSCloud",
                "CheckGiftHeartReplenish",
                new Dictionary<string, object>()
                {
                });
        }

        public async Task<string> ChangeDisplayName(string newDisplayName)
        {
            return await k_Service.CallModuleEndpointAsync<string>(
                "GemHunterUGSCloud",
                "ChangeDisplayName",
                new Dictionary<string, object>()
                {
                    {"newDisplayName", newDisplayName},
                });
        }

        public async Task<bool> ChangeProfilePicture(GemHunterUGSCloud.Models.ProfilePictureChangeRequest request)
        {
            return await k_Service.CallModuleEndpointAsync<bool>(
                "GemHunterUGSCloud",
                "ChangeProfilePicture",
                new Dictionary<string, object>()
                {
                    {"request", request},
                });
        }

        public async Task<GemHunterUGSCloud.Models.LootBoxCooldownResult> CheckLootBoxCooldown()
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.LootBoxCooldownResult>(
                "GemHunterUGSCloud",
                "CheckLootBoxCooldown",
                new Dictionary<string, object>()
                {
                });
        }

        public async Task<GemHunterUGSCloud.Models.LootBoxResult> ClaimLootBox()
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.LootBoxResult>(
                "GemHunterUGSCloud",
                "ClaimLootBox",
                new Dictionary<string, object>()
                {
                });
        }

        public async Task<GemHunterUGSCloud.Models.PlayerInitializationResponse> OnSignInHandlePlayerInitialization()
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.PlayerInitializationResponse>(
                "GemHunterUGSCloud",
                "OnSignInHandlePlayerInitialization",
                new Dictionary<string, object>()
                {
                });
        }

        public async Task<GemHunterUGSCloud.Models.PlayerDataSyncResponse> SyncAllPlayerData()
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.PlayerDataSyncResponse>(
                "GemHunterUGSCloud",
                "SyncAllPlayerData",
                new Dictionary<string, object>()
                {
                });
        }

        public async Task<GemHunterUGSCloud.Models.PlayerData> GetPlayerData()
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.PlayerData>(
                "GemHunterUGSCloud",
                "GetPlayerData",
                new Dictionary<string, object>()
                {
                });
        }

        public async Task<GemHunterUGSCloud.Models.PlayerData> HandleLevelWon()
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.PlayerData>(
                "GemHunterUGSCloud",
                "HandleLevelWon",
                new Dictionary<string, object>()
                {
                });
        }

        public async Task<GemHunterUGSCloud.Models.PlayerData> HandleLevelLost()
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.PlayerData>(
                "GemHunterUGSCloud",
                "HandleLevelLost",
                new Dictionary<string, object>()
                {
                });
        }

        public async Task<GemHunterUGSCloud.Models.PlayerEconomyData> GetPlayerEconomyData()
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.PlayerEconomyData>(
                "GemHunterUGSCloud",
                "GetPlayerEconomyData",
                new Dictionary<string, object>()
                {
                });
        }

        public async Task<GemHunterUGSCloud.Models.PlayerData> HandleSendPlayerGift(string recipientPlayerId)
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.PlayerData>(
                "GemHunterUGSCloud",
                "HandleSendPlayerGift",
                new Dictionary<string, object>()
                {
                    {"recipientPlayerId", recipientPlayerId},
                });
        }

        public async Task<GemHunterUGSCloud.Models.PlayerData> CheckReceivedGifts()
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.PlayerData>(
                "GemHunterUGSCloud",
                "CheckReceivedGifts",
                new Dictionary<string, object>()
                {
                });
        }

        public async Task<GemHunterUGSCloud.Models.PlayerEconomyData> HandlePurchase(string productId, string receipt, string transactionId)
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.PlayerEconomyData>(
                "GemHunterUGSCloud",
                "HandlePurchase",
                new Dictionary<string, object>()
                {
                    {"productId", productId},
                    {"receipt", receipt},
                    {"transactionId", transactionId},
                });
        }

        public async Task<GemHunterUGSCloud.Models.PlayerEconomyData> HandleFreeCoinPackPurchase()
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.PlayerEconomyData>(
                "GemHunterUGSCloud",
                "HandleFreeCoinPackPurchase",
                new Dictionary<string, object>()
                {
                });
        }

        public async Task<GemHunterUGSCloud.Models.PlayerData> HandleUnlock(int areaId, int itemId)
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.PlayerData>(
                "GemHunterUGSCloud",
                "HandleUnlock",
                new Dictionary<string, object>()
                {
                    {"areaId", areaId},
                    {"itemId", itemId},
                });
        }

        public async Task<GemHunterUGSCloud.Models.PlayerData> HandleUpgrade(int areaId, int itemId)
        {
            return await k_Service.CallModuleEndpointAsync<GemHunterUGSCloud.Models.PlayerData>(
                "GemHunterUGSCloud",
                "HandleUpgrade",
                new Dictionary<string, object>()
                {
                    {"areaId", areaId},
                    {"itemId", itemId},
                });
        }
    }
}
